use "/Users/ryanspaight/Documents/1_PAship/randhrs1992_2014v2_STATA/randhrs1992_2014v2.dta" /* Data that comes from  */
macro drop _all

/* Reshaping by manually adding stub names: feasible with few variables, but not for the entire HRS */
/* Solution found here: https://www.statalist.org/forums/forum/general-stata-discussion/general/1334601-reshape-large-data-set*/

/* Change naming convention to reshape from wide to long */
/* probably a simple solution to go " i = 1/12" but not finding it; splitting works and is necessary since *_1 and *_10 get treated the same otherwise */
forval i=10/12 {
rename r`i'* rW*_`i'
rename s`i'* sW*_`i'
rename h`i'* hW*_`i'
}
forval i=1/9 {
rename r`i'* rW*_`i'
rename s`i'* sW*_`i'
rename h`i'* hW*_`i'
}

/* Create local list of variables, modify, and create local lost of stub names for reshape */
/* Solution (after a lot of searching!) found here: https://www.statalist.org/forums/forum/general-stata-discussion/general/1334601-reshape-large-data-set */
/* Also need to save variable labels for after reshape from wide to long */
/* Process described here: https://www.stata.com/support/faqs/data-management/apply-labels-after-reshape/ */
/* or here: https://www.statalist.org/forums/forum/general-stata-discussion/general/1329818-keep-variable-labels-after-reshape-long*/

/* to save labels */
/* this doesn't save all of them, but about 90%; will look for other solutions to this, hopefully better than including variables from more waves, which will probably not work well anyway*/
unab stubLabel: *_6
local stubLabel: subinstr local stubLabel "_6" "_", all

foreach s of local stubLabel { 
    local vl`s' : variable label `s'6 
    local vl`s' : subinstr local vl`s' "6:" "" 
    local vl`s' = trim("`vl`s''") 
} 

/*  to reshape */
ds rW* sW* hW*
local stubs `r(varlist)'
// display "`stubs'"

/*  again, probably a simple solution to go " i = 1/12" but not finding it; splitting works and is necessary since *_1 and *_10 get treated the same otherwise */
forvalues i =10/12 {
	local stubs : subinstr local stubs "_`i'" "_", all
	}
forvalues i =1/9 {
	local stubs : subinstr local stubs "_`i'" "_", all
	}
		
local stubs: list uniq stubs
//display "`stubs'"

reshape long `stubs', i(hhidpn) j(wave 1-12)

/* to reappend lables */
foreach s of local stubLabel { 
    label var `s' "`vl`s''"
}
/* to manually label*/
la var sWvgactx_ "vigorous physical activity"
la var sWmdactx_ "moderate physical activity"
la var sWltactx_ "light physical activity"
la var rWvgactx_ "vigorous physical activity"
la var rWmdactx_ "moderate physical activity"
la var rWltactx_ "light physical activity"
la var sWalzhe_ "S reports Alzheimer this wv"
la var rWalzhe_ "R reports Alzheimer this wv"
la var sWdemen_ "S reports Dementia this wv"
la var rWdemen_ "R reports Dementia this wv"
la var sWdemene_ "S ever reported Dementia"
la var rWdemene_ "R ever reported Dementia"
la var sWalzhee_ "S ever reported Alzheimer"
la var rWalzhee_ "R ever reported Alzheimer"
la var sWalzhef_ "Flag chg prev report of Alzheimer"
la var rWalzhef_ "Flag chg prev report of Alzheimer"
la var sWdemenf_ "Flag chg prev report of dementia"
la var rWdemenf_ "Flag chg prev report of dementia"
la var sWalzheq_ "S Q-wording of Alzheimer this wv"
la var rWalzheq_ "R Q-wording of Alzheimer this wv"
la var sWdemenq_ "S Q-wording of dementia this wv"
la var rWdemenq_ "R Q-wording of dementia this wv"
la var sWalzhes_ "Alzheimer information for the Respondent’s spouse"
la var sWdemens_ "Dementia information for the Respondent’s spouse"
la var rWdemens_ "respondent report Dementia since last interview"
la var rWalzhes_ "respondent report Alzheimer since last interview"
la var sWoopmdo_ "S out of pocket medical expenses (includes other category)"
la var rWoopmdo_ "R out of pocket medical expenses (includes other category)"
la var sWoopmdof_ "S out of pocket medical expenses imputed"
la var rWoopmdof_ "R out of pocket medical expenses imputed"   
la var sWnovoc_ "S refused vocabulary test"
la var rWnovoc_ "R refused vocabulary test" 
la var sWrxprem_ "nominal dollars that the Spouse pays monthly for a Medicare prescription"
la var rWrxprem_ "nominal dollars that the Respondent pays monthly for a Medicare prescription" 
la var rWjcoccb_ "R Cur Job Occup/2000 Census"
la var sWjcoccb_ "S Cur Job Occup/2000 Census"
la var rWjcindb_ "R Cur Job Industry/2002 Census"
la var sWjcindb_ "S Cur Job Industry/2002 Census"
la var rWjloccb_ "R Long Job Occup/2000 Census"
la var sWjloccb_ "S Long Job Occup/2000 Census"
la var rWjcindb_ "R Cur Job Industry/2000 Census"
la var sWjcindb_ "S Cur Job Industry/2000 Census"
la var rWjlindb_ "R  Long Job Industry/2002 Census"
la var sWjlindb_ "S  Long Job Industry/2002 Census"
la var rWjcindb_ "R Cur Job Industry/2002 Census"
la var sWjcindb_ "S Cur Job Industry/2002 Census"
la var rWjcoccc_ "R Cur Job Occup/2010 Census"
la var sWjcoccc_ "S Cur Job Occup/2010 Census"
la var rWjloccc_"R Long Job Occup/2010 Census"
la var sWjloccc_ "S Long Job Occup/2010 Census"
la var rWjcindc_ "R Cur Job Industry/2007 Census"
la var sWjcindc_ "S Cur Job Industry/2007 Census"
la var rWjcindc_ "R Long Job Industry/2007 Census"
la var sWjcindc_ "S Long Job Industry/2007 Census"
la var rWjcindc_ "R Cur Job Industry/2007 Census"
la var sWjcindc_ "S Cur Job Industry/2007 Census"
la var rWjlindc_ "R Long Job Industry/2007 Census"
la var sWjlindc_ "S Long Job Industry/2007 Census"
la var rWptypd1_ "R Current pension type in detail #1"
la var sWptypd1_ "S Current pension type in detail #1"                                     
la var rWptypd2_ "R Current pension type in detail #2"
la var sWptypd2_ "S Current pension type in detail #2"
la var rWptypd3_ "R Current pension type in detail #3"
la var sWptypd3_ "S Current pension type in detail #3"                                     
la var rWptypd4_ "R Current pension type in detail #4"
la var sWptypd4_ "S Current pension type in detail #4"
la var rWptypd1_ "R Current pension type in detail #1"
la var sWptypd1_ "S Current pension type in detail #1"
la var rWptypd2_ "R Current pension type in detail #2"
la var sWptypd2_ "S Current pension type in detail #2"
la var rWptypd3_ "R Current pension type in detail #3"
la var sWptypd3_ "S Current pension type in detail #3"
la var rWptypd4_ "R Current pension type in detail #4"
la var sWptypd4_ "S Current pension type in detail #4"
la var rWptypf1_ "R Does pension type match detail? #1"
la var sWptypf1_ "S Does pension type match detail? #1"
la var rWptypf2_ "R Does pension type match detail? #2"
la var sWptypf2_ "S Does pension type match detail? #2"
la var rWptypf3_ "R Does pension type match detail? #3"
la var sWptypf3_ "S Does pension type match detail? #3"
la var rWptypf4_ "R Does pension type match detail? #4"
la var sWptypf4_ "S Does pension type match detail? #4"
la var rWiwbegf_ "R Interview Beg Date Flag"
la var sWiwbegf_ "S Interview Beg Date Flag"
la var rWiwendf_ "R Interview End Date Flag"
la var sWiwendf_ "S Interview End Date Flag"
la var rWdeprex_ "R CESD: Felt depressed-raw"
la var sWdeprex_ "S CESD: Felt depressed-raw"
la var rWefforx_ "R CESD: Everything an effort-raw"
la var sWefforx_ "S CESD: Everything an effort-raw"
la var rWsleepx_ "R CESD: Sleep was restless-raw"
la var sWsleepx_ "S CESD: Sleep was restless-raw"
la var rWwhappx_ "R CESD: Was happy-raw"
la var sWwhappx_ "S CESD: Was happy-raw"
la var rWflonex_ "R CESD: Felt lonely-raw"
la var sWflonex_ "S CESD: Felt lonely-raw"
la var rWenlifx_ "R CESD: Enjoyed life -raw"
la var sWenlifx_ "S CESD: Enjoyed life -raw"
la var rWfsadx_ "R CESD: Felt sad-raw"
la var sWfsadx_ "S CESD: Felt sad-raw"
la var rWgoingx_ "R CESD: Could not get going -raw"
la var sWgoingx_ "S CESD: Could not get going -raw"
la var rWlhtact_ "R Wtr light phys activ 3+/wk"
la var sWlhtact_ "R Wtr light phys activ 3+/wk"
la var rWltactf_ "R Freq light phys activities"
la var sWltactf_ "S Freq light phys activities"
la var rWltactn_ "R # times/per light phys act"
la var sWltactn_ "S # times/per light phys act"
la var rWltactp_ "R Period light phys activ"
la var sWltactp_ "S Period light phys activ"
la var rWvgactf_ "R Freq vigorous phys activ"
la var sWvgactf_ "S Freq vigorous phys activ"
la var rWvgactn_ "R # times/per vigor phys act"
la var sWvgactn_ "S # times/per vigor phys act"
la var rWvgactp_ "R Period vigor phys activ"
la var sWvgactp_ "S Period vigor phys activ"
la var rWhswrkf_ "R Freq heavy housework"
la var sWhswrkf_ "S Freq heavy housework"
la var rWulcer_ "Rs had ulcers"
la var sWulcer_ "Ss had ulcers"
la var rWdrinkr_ "R range of # drinks/day"
la var sWdrinkr_ "S range of # drinks/day"
la var rWnsscre_ "R Calculated number series score"
la var sWnsscre_ "S Calculated number series score"
la var rWnsscse_ "R Calculated number series score-SE"
la var sWnsscse_ "S Calculated number series score-SE"
la var rWjogw_ "R Any Diff-Jog one mile"
la var sWjogw_ "S Any Diff-Jog one mile"
la var rWwalksw_ "R Any Diff-Walk sev blocks"
la var sWwalksw_ "S Any Diff-Walk sev blocks"
la var rWwalk1w_ "R Any Diff-Walk one block"
la var sWwalk1w_ "S Any Diff-Walk one block"
la var rWwalkrw_ "R no difficulty walking"
la var sWwalkrw_ "S no difficulty walking"
la var rWsitw_ "R Any Diff-Sit for 2 hours"
la var sWsitw_ "S Any Diff-Sit for 2 hours"
la var rWchairw_ "R Any Diff-Get up fr chair"
la var sWchairw_ "S Any Diff-Get up fr chair"
la var rWbedw_ "R Any Diff-Get up fr bed"
la var sWbedw_ "S Any Diff-Get up fr bed"
la var rWclimsw_ "R Any Diff-Climb sev flt str"
la var sWclimsw_ "S Any Diff-Climb sev flt str"
la var rWclim1w_ "R Any Diff-Climb 1 flt stair"
la var sWclim1w_ "S Any Diff-Climb 1 flt stair"
la var rWliftw_ "R Any Diff-Lift/carry 10lbs"
la var sWliftw_ "S Any Diff-Lift/carry 10lbs"
la var rWstoopw_ "R Any Diff-Stoop/Kneel/Crouch"
la var sWstoopw_ "S Any Diff-Stoop/Kneel/Crouch"
la var rWdimew_ "R Any Diff-Pick up a dime"
la var sWdimew_ "S Any Diff-Pick up a dime"
la var rWbathw_ "R Any Diff-Bathing, shower"
la var sWbathw_ "S Any Diff-Bathing, shower"
la var rWarmsw_ "R Any Diff-Reach/xtnd arms up"
la var sWarmsw_ "S Any Diff-Reach/xtnd arms up"
la var rWpushw_ "R Any Diff-Push/pull lg obj"
la var sWpushw_ "S Any Diff-Push/pull lg obj"
la var rWeatw_ "R Any Diff-Eating"
la var sWeatw_ "S Any Diff-Eating"
la var rWdressw_ "R Any Diff-Dressing"
la var sWdressw_ "S Any Diff-Dressing"
la var rWmapw_ "R Any Diff-Use a map"
la var sWmapw_ "S Any Diff-Use a map"
la var rWmcwvw_ "R Any Diff-Use a microwave"
la var sWmcwvw_ "S Any Diff-Use a microwave"
la var rWcalcw_ "R Any Diff-Use a calculator"
la var sWcalcw_ "S Any Diff-Use a calculator"
la var rWcompw_ "R Any Diff-Use a computer"
la var sWcompw_ "S Any Diff-Use a computer"
la var rWmcwv_ "R Diff-Use a microwave"
la var sWmcwv_ "S Diff-Use a microwave"
la var rWcalc_ "R Diff-Use a calculator"
la var sWcalc_ "S Diff-Use a calculator"
la var rWcomp_ "R Diff-Use a computer"
la var sWcomp_ "S Diff-Use a computer"
la var rWcalca_ "R Some Diff-Use a calculator"
la var sWcalca_ "S Some Diff-Use a calculator"
la var rWmealsr_ "R Diff-Preparing hot meals"
la var sWmealsr_ "S Diff-Preparing hot meals"
la var rWshopr_ "R Diff-Shop for groceries"
la var sWshopr_ "S Diff-Shop for groceries"
la var rWphoner_ "R Diff-Use telephone"
la var sWphoner_ "S Diff-Use telephone"
la var rWmedsr_ "R Diff-Take medications"
la var sWmedsr_ "S Diff-Take medications"
la var rWmoneyr_ "R Diff-Managing money"
la var sWmoneyr_ "S Diff-Managing money"
la var rWmobilw_ "R Any Diff-Mobility /0-5"
la var sWmobilw_ "S Any Diff-Mobility /0-5"
la var rWlgmusw_ "R Any Diff-Large Muscle /0-4"
la var sWlgmusw_ "S Any Diff-Large Muscle /0-4"
la var rWadlww_ "R Any Diff-ADLs:Wallace /0-3"
la var sWadlww_ "S Any Diff-ADLs:Wallace /0-3"
la var rWiadlww_ "R Any Diff-IADLs:Wallace /0-3"
la var sWiadlww_ "S Any Diff-IADLs:Wallace /0-3"
la var rWadlw_ "R Any Diff-ADLs /0-5"
la var sWadlw_ "S Any Diff-ADLs /0-5"
la var rWimrc20_ "R IMMEDIATE WORD RECALL"
la var sWimrc20_ "S IMMEDIATE WORD RECALL"
la var rWdlrc20_ "R DELAYED WORD RECALL"
la var sWdlrc20_ "S DELAYED WORD RECALL"
la var rWtr40_ "R TOTAL WORD RECALL SUMMARY SCORE"
la var sWtr40_ "S TOTAL WORD RECALL SUMMARY SCORE"
la var rWflag_ "R 95 AHEAD OR 96 HRS"
la var sWflag_ "S 95 AHEAD OR 96 HRS"
la var rWaimr10_ "R IMMEDIATE WORD RECALL-AHD93"
la var sWaimr10_ "S IMMEDIATE WORD RECALL-AHD93"
la var rWadlr10_ "R DELAYED WORD RECALL-AHD93"
la var sWadlr10_ "S DELAYED WORD RECALL-AHD93"
la var rWatr20_ "R AHD WORD TOTAL RECALL SUMMARY SCORE"
la var sWatr20_ "S AHD WORD TOTAL RECALL SUMMARY SCORE"
la var rWhimr20_ "R IMMEDIATE WORD RECALL-HRS94"
la var sWhimr20_ "S IMMEDIATE WORD RECALL-HRS94"
la var rWhdlr20_ "R DELAYED WORD RECALL-HRS94"
la var sWhdlr20_ "S DELAYED WORD RECALL-HRS94"
la var rWhtr40_ "R HRS WORD TOTAL RECALL SUMMARY SCORE"
la var sWhtr40_ "S HRS WORD TOTAL RECALL SUMMARY SCORE"
la var rWamstot_ "R AHD MENTAL STATUS SUMMARY SCORE"
la var sWamstot_ "S AHD MENTAL STATUS SUMMARY SCORE"
la var rWacgtot_ "R AHD TOTAL COGNITION SUMMARY SCORE"
la var sWacgtot_ "S AHD TOTAL COGNITION SUMMARY SCORE"
la var rWtotmdf_ "R Total med imputed"
la var sWtotmdf_ "S Total med imputed"
la var rWtotmd_ "R Total med expenses, prv 2 yrs"
la var sWtotmd_ "S Total med expenses, prv 2 yrs"
la var rWpartd_ "R Medicare Part D status"
la var sWpartd_ "S Medicare Part D status"
la var rWifssi_ "R ImpFlag-SSI Inc"
la var sWifssi_ "S AImpFlag-SSI Inc"
la var rWsswrer_ "R SS wealth based on own earnings, claiming at 62"
la var sWsswrer_ "S SS wealth based on own earnings, claiming at 62"
la var rWsswrnr_ "R SS wealth based on own earnings, claiming at NRA"
la var sWsswrnr_ "S SS wealth based on own earnings, claiming at NRA"
la var rWsswrxa_ "R SS wealth based on own earnings, claiming at 70"
la var sWsswrxa_ "S SS wealth based on own earnings, claiming at 70"
la var rWclaimed_ "R already claiming SS benefits"
la var sWclaimed_ "S already claiming SS benefits"
la var rWgovot_ "R has Gov plan-Other"
la var sWgovot_ "S has Gov plan-Other"
la var rWtliprm_ "R Term Life Insurance Monthly Premium"
la var sWtliprm_ "S Term Life Insurance Monthly Premium"
la var rWliv85_ "R Probability to live 85+"
la var sWliv85_ "S Probability to live 85+"
la var rWliv85p_ "R LfTab prob live 85+/R curage"
la var sWliv85p_ "S LfTab prob live 85+/R curage"
la var rWliv85r_ "R Rprob live 85+ / LfTab prob"
la var sWliv85r_ "S Rprob live 85+ / LfTab prob"
la var rWliv85c_ "R Chg live 85+: R/LfTab ratio"
la var sWliv85c_ "S Chg live 85+: R/LfTab ratio"
la var rWliv85f_ "R Flag LIV85C, # prv iw"
la var sWliv85f_ "S Flag LIV85C, # prv iw"
la var rWretinc_ "R R Worry-enough retiremnt inc"
la var sWretinc_ "S R Worry-enough retiremnt inc"
la var rWretwsp_ "R Expect-SP retire same time"
la var sWretwsp_ "S Expect-SP retire same time"
la var rWretliv_ "R Expect-retiremt living std"
la var sWretliv_ "S Expect-retiremt living std"
la var rWretwlt_ "R Expect-tot retirement wlth"
la var sWretwlt_ "S Expect-tot retirement wlth"
la var rWretwrk_ "R Plan-paid work aft retired"
la var sWretwrk_ "S Plan-paid work aft retired"
la var rWbeqlrg_ "R Prob leave sizable bequest"
la var sWbeqlrg_ "S Prob leave sizable bequest"
la var hWohrshh_ "HRS core HHID + SubHHold /Num"
la var hWoopmd_ "HH Out of pkt med exp, prv 12 mos"
la var hWoopma_ "HH Out of pkt med exp for all, prv 12 mos"
la var hWoopmdf_ "HH Out of pkt med exp imputed"
la var hWoopmaf_ "Flag:HH Out of pkt imputed for all"
la var hWitot2_ "Income: Imputed Total Household"
la var hWiftot2_ "ImpFlag: Imputed Total Household"
la var hWsswrer_ "Total household SS wealth, all claiming at 62"
la var hWsswrnr_ "Total household SS wealth, all claiming at NRA"
la var hWsswrxa_ "Total household SS wealth, all claiming at 70"

